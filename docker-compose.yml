version: "3.9"
services:

  database:
    container_name: prefect-database
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    volumes: 
      - db:/var/lib/postgresql/data
  
  server:
    container_name: prefect-server
    image: prefecthq/prefect:2.14.4-python3.10
    restart: always
    volumes:
      - prefect:/root/.prefect
    command: bash -c "/opt/prefect/entrypoint.sh prefect server start"
    environment:
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@database:5432/${DB_NAME}
    ports:
      - 4200:4200
    depends_on:
      - database

  worker:
    container_name: prefect-worker
    image: prefecthq/prefect:2.14.4-python3.10
    restart: always
    command: bash -c "/opt/prefect/entrypoint.sh prefect worker start -p docker-pool --type docker"
    environment:
      - PREFECT_API_URL=http://server:4200/api
      - EXTRA_PIP_PACKAGES=prefect-docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  deploy:
    container_name: prefect-deploy
    image: managepydatalouna/get_repo:latest
    command: bash -c "/opt/prefect/entrypoint.sh prefect deploy --all"
    environment:
      - PREFECT_API_URL=http://server:4200/api

volumes:
  prefect:
  db:

networks:
  default:
    name: prefect-network
